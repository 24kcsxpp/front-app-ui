<template>
    <div ref="container" class="joker-demo-container">
        <h2>ShareSheet 分享面板</h2>
        <p>底部弹起的分享面板，用于展示各分享渠道对应的操作按钮，不含具体的分享逻辑。</p>
        <h3>基础用法</h3>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-button @click=&quot;handleClick&quot; fullWidth type=&quot;primary&quot;&gt;Click Me&lt;/jk-button&gt;
    &lt;jk-share-sheet
        ref=&quot;shareSheet&quot;
        title=&quot;立即分享&quot;
        @select=&quot;handleSelect&quot;
        options=&quot;@([
            { label: '微信', icon: 'wechat' },
            { label: '微博', icon: 'weibo' },
            { label: 'QQ', icon: 'qq' },
            { label: '复制链接', icon: 'link' },
            { label: '分享海报', icon: 'poster' },
            { label: '二维码', icon: 'qrcode' }
        ])&quot;
    /&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;
import { Toast } from &quot;../../../packages/toast&quot;;

export default class extends Component {
    handleClick() {
        this.$getRef(&quot;shareSheet&quot;)?.component.open();
    }
    handleSelect(e: VNode.Event&lt;{ label: string }&gt;) {
        Toast(e.data.label);
    }
}
&lt;/script&gt;

</code></pre>
        </DemoContainer>
        <h3>标题描述</h3>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-button @click=&quot;handleClick&quot; fullWidth type=&quot;primary&quot;&gt;Click Me&lt;/jk-button&gt;
    &lt;jk-share-sheet
        ref=&quot;shareSheet&quot;
        title=&quot;分享给你的朋友&quot;
        description=&quot;分享美好&quot;
        options=&quot;@([
            { label: '微信', icon: 'wechat' },
            { label: '微博', icon: 'weibo' },
            { label: 'QQ', icon: 'qq' },
            { label: '复制链接', icon: 'link' },
            { label: '分享海报', icon: 'poster' },
            { label: '二维码', icon: 'qrcode' }
        ])&quot;
    /&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    handleClick() {
        this.$getRef(&quot;shareSheet&quot;)?.component.open();
    }
}
&lt;/script&gt;

</code></pre>
        </DemoContainer>
        <h3>项禁用</h3>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-button @click=&quot;handleClick&quot; fullWidth type=&quot;primary&quot;&gt;Click Me&lt;/jk-button&gt;
    &lt;jk-share-sheet
        ref=&quot;shareSheet&quot;
        title=&quot;分享给你的朋友&quot;
        description=&quot;分享美好&quot;
        options=&quot;@([
            { label: '微信', icon: 'wechat' },
            { label: '微博', icon: 'weibo', disabled: true },
            { label: 'QQ', icon: 'qq' },
            { label: '复制链接', icon: 'link' },
            { label: '分享海报', icon: 'poster' },
            { label: '二维码', icon: 'qrcode' }
        ])&quot;
    /&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    handleClick() {
        this.$getRef(&quot;shareSheet&quot;)?.component.open();
    }
}
&lt;/script&gt;

</code></pre>
        </DemoContainer>
        <h3>自定义图标</h3>
        <p>
            <code>icon</code>
            属性可以传递任何字体图标，也可以传递图片地址。
        </p>
        <blockquote>
            <p>
                默认提供了以下快捷ICON:&quot;wechat&quot;, &quot;weibo&quot;, &quot;qq&quot;, &quot;link&quot;, &quot;qrcode&quot;, &quot;poster&quot;
            </p>
        </blockquote>
        <DemoContainer component="@(components.DEMO_JOKER_demo4)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-button @click=&quot;handleClick&quot; fullWidth type=&quot;primary&quot;&gt;Click Me&lt;/jk-button&gt;
    &lt;jk-share-sheet
        ref=&quot;shareSheet&quot;
        title=&quot;分享给你的朋友&quot;
        description=&quot;分享美好&quot;
        options=&quot;@([
            { label: '用户', icon: 'jk-icon-user' },
            { label: '微博', icon: 'weibo' },
            {
                label: '好兄弟',
                icon: 'https://img.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg?w=360'
            }
        ])&quot;
    /&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    handleClick() {
        this.$getRef(&quot;shareSheet&quot;)?.component.open();
    }
}
&lt;/script&gt;

</code></pre>
        </DemoContainer>
        <h3>Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>参数</th>
                    <th>说明</th>
                    <th>类型</th>
                    <th>可选值</th>
                    <th>默认值</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <strong>title</strong>
                    </td>
                    <td>分享面板的标题文本，用于说明分享场景或目的，不传递时不显示标题区域</td>
                    <td>string</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>
                        <strong>options</strong>
                    </td>
                    <td>分享渠道配置数组，每一项对应一个分享按钮的配置信息</td>
                    <td>
                        Array&lt;{label: string; // 分享渠道名称（如“微信好友”）icon: string; // 分享图标disabled: boolean; // 是否禁用该分享渠道}&gt;
                    </td>
                    <td>
                        <code>icon</code>
                        可选值：- 快捷ICON：&quot;wechat&quot;、&quot;weibo&quot;、&quot;qq&quot;、&quot;link&quot;、&quot;qrcode&quot;、&quot;poster&quot; - 字体图标样式（如 &quot;iconfont icon-custom&quot;）- 图片URL地址（如 &quot;https://xxx.com/icon.png&quot;）
                    </td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>
                        <strong>cancelText</strong>
                    </td>
                    <td>底部取消按钮的文本内容，用于关闭分享面板</td>
                    <td>string</td>
                    <td>-</td>
                    <td>&quot;取消&quot;</td>
                </tr>
            </tbody>
        </table>
        <h3>Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>事件名</th>
                    <th>说明</th>
                    <th>参数</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>select</td>
                    <td>选择分享渠道后触发</td>
                    <td>数组项</td>
                </tr>
                <tr>
                    <td>cancel</td>
                    <td>点击取消事件</td>
                    <td>-</td>
                </tr>
            </tbody>
        </table>
        <h3>Sections</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>名称</th>
                    <th>描述</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>title</td>
                    <td>标题自定义</td>
                </tr>
                <tr>
                    <td>description</td>
                    <td>描述信息自定义</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo4 from "../../components/share-sheet/demo4.joker";
import DEMO_JOKER_demo3 from "../../components/share-sheet/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/share-sheet/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/share-sheet/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo4,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>